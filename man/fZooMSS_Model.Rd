% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fZooMSS_Model.R
\name{fZooMSS_Model}
\alias{fZooMSS_Model}
\title{Main ZooMSS model function for complete simulations}
\usage{
fZooMSS_Model(input_params, Groups, SaveTimeSteps)
}
\arguments{
\item{input_params}{Data frame containing model parameters and environmental time series.
Must include columns: tmax (simulation length), dt (time step), isave (save frequency),
and environmental data (time_step, sst, chlo) if running with environmental forcing.}

\item{Groups}{Data frame defining functional groups with their biological parameters.
Must include columns defining species characteristics, size ranges, and feeding parameters.}

\item{SaveTimeSteps}{Logical indicating whether to save full time series (TRUE) or
just model parameters (FALSE). TRUE saves complete model output including time series
of abundance and biomass.}
}
\value{
List containing:
\itemize{
\item abundances: Average abundances across the final 50\% of simulation
\item diets: Average diet compositions across functional groups
\item growth: Average growth rates for each group and size class
\item mortality: Average mortality rates
\item model: Complete model output (if SaveTimeSteps=TRUE) or just parameters (if FALSE)
}
}
\description{
This is the main wrapper function that orchestrates a complete ZooMSS
model simulation from parameter setup through model execution to output processing.
}
\details{
Run Complete ZooMSS Model Simulation

This function coordinates the entire ZooMSS modeling workflow:
\enumerate{
\item Validates that environmental time series data is provided
\item Sets up model parameters using the Groups data and input parameters
\item Initializes the model structure and feeding kernels
\item Runs the model forward in time with dynamic environmental forcing
\item Processes outputs by averaging the final 50\% of the simulation
\item Returns organized results including abundances, diets, growth, and mortality
}

The function can optionally save full time series data or just averaged results
depending on the SaveTimeSteps parameter. This is the primary entry point for
running ZooMSS simulations with environmental forcing.
}
\examples{
\dontrun{
# Load functional groups data
data(Groups)

# Create environmental time series
env_data <- fZooMSS_CreateSimpleTimeSeries(1000, 0.01)

# Set up input parameters
input_params <- data.frame(
  tmax = 10,
  dt = 0.01, 
  isave = 10,
  time_step = 1:1000,
  sst = env_data$sst,
  chlo = env_data$chlo
)

# Run the model
results <- fZooMSS_Model(input_params, Groups, SaveTimeSteps = FALSE)
}

}
