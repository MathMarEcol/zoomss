% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fZooMSS_Setup.R
\name{fZooMSS_Setup}
\alias{fZooMSS_Setup}
\title{Initialize ZooMSS model components and calculate feeding interactions}
\usage{
fZooMSS_Setup(param)
}
\arguments{
\item{param}{Complete parameter list created by fZooMSS_Params containing:
\itemize{
\item Groups: Functional group definitions and biological parameters
\item Model dimensions (ngrps, ngrid, time parameters)
\item Environmental forcing time series
\item Physical and biological constants
}}
}
\value{
Model object containing:
\itemize{
\item param: Input parameters (passed through)
\item dynam_\emph{: Dynamic feeding kernel arrays for group interactions
\item phyto_}: Phytoplankton feeding kernel arrays
\item nPP: Initial phytoplankton abundance spectrum
\item M_sb_base: Baseline senescence mortality rates
\item fish_mort: Fishing mortality rates
\item assim_eff: Assimilation efficiency matrix
\item temp_eff: Temperature effect matrix (initialized)
\item N: Initial abundance arrays
\item Additional model structure components
}
}
\description{
Sets up the ZooMSS model structure by calculating feeding kernels, mortality
rates, and other model components that remain static during the simulation.
}
\details{
Setup ZooMSS Model Structure and Feeding Kernels

This function initializes the core ZooMSS model structure by calculating:

\strong{Static Components (calculated once):}
\itemize{
\item Feeding preference kernels based on predator-prey size ratios
\item Search volumes and encounter rates between size classes
\item Baseline mortality rates (senescence, fishing)
\item Initial abundance distributions for all functional groups
}

\strong{Dynamic Component Structures (updated during run):}
\itemize{
\item Phytoplankton feeding kernels (structure calculated here, values updated with environment)
\item Growth and diffusion kernels for zooplankton and fish interactions
\item Diet and mortality tracking arrays
}

\strong{Model Architecture:}
\itemize{
\item Size-structured populations across logarithmic size classes
\item Multiple functional groups with different feeding behaviors
\item Environmental coupling through phytoplankton and temperature
}

The function separates static calculations (done once for efficiency) from
dynamic calculations (updated each time step in fZooMSS_Run).
}
\examples{
\dontrun{
# Create parameters for model setup
params <- fZooMSS_Params(Groups, input_params)

# Initialize model structure
model <- fZooMSS_Setup(params)

# Model is now ready for time integration with fZooMSS_Run
results <- fZooMSS_Run(model)
}

}
