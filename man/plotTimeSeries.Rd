% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zoomss_plotting.R
\name{plotTimeSeries}
\alias{plotTimeSeries}
\title{Unified function to visualize time series changes for different metrics}
\usage{
plotTimeSeries(
  mdl,
  by = "abundance",
  stacked = FALSE,
  proportional = FALSE,
  species = NULL
)
}
\arguments{
\item{mdl}{ZooMSS results object containing model outputs with time series data}

\item{by}{Character string specifying the metric to plot. Options: "abundance", "biomass", "mortality", "growth" (default: "abundance")}

\item{stacked}{Logical, whether to create stacked area plot for biomass (default: FALSE, only applies to biomass)}

\item{proportional}{Logical, whether to show proportions for biomass (default: FALSE, only applies to biomass)}

\item{species}{Character vector of species names to include. If NULL, all species included (default: NULL, applies to all metrics)}
}
\value{
ggplot object showing the requested time series by species
}
\description{
Creates time series plots showing how abundance, biomass, mortality, or growth
rates of functional groups change throughout the ZooMSS simulation period.
}
\details{
Plot Time Series Data for ZooMSS Results

This function creates time series visualizations by:
\itemize{
\item \strong{Abundance}: Summing abundances across size classes, log-transformed y-axis
\item \strong{Biomass}: Calculating biomass (abundance Ã— weight), with optional stacking and proportional scaling
\item \strong{Mortality}: Averaging predation mortality rates across size classes
\item \strong{Growth}: Averaging growth rates across size classes, log-transformed y-axis
}

All plots use species-specific colors and filter out zero values. Time series plots help identify:
\itemize{
\item Equilibration time for model runs
\item Seasonal or cyclical patterns in ecological metrics
\item Relative patterns between functional groups
\item Model stability and convergence behavior
}
}
\examples{
\dontrun{
# After running ZooMSS model
results <- zoomss_model(input_params, Groups)

# Plot different metrics
abundance_plot <- plotTimeSeries(results, by = "abundance")
biomass_plot <- plotTimeSeries(results, by = "biomass")
mortality_plot <- plotTimeSeries(results, by = "mortality")
growth_plot <- plotTimeSeries(results, by = "growth")

# Biomass with special options
stacked_plot <- plotTimeSeries(results, by = "biomass", stacked = TRUE)
prop_plot <- plotTimeSeries(results, by = "biomass", proportional = TRUE)

# Focus on specific species (works for all metrics)
copepod_plot <- plotTimeSeries(results, by = "biomass",
                              species = c("OmniCopepods", "CarnCopepods"))
abundance_copepods <- plotTimeSeries(results, by = "abundance",
                                    species = c("OmniCopepods", "CarnCopepods"))
mortality_copepods <- plotTimeSeries(results, by = "mortality",
                                    species = c("OmniCopepods", "CarnCopepods"))
growth_copepods <- plotTimeSeries(results, by = "growth",
                                 species = c("OmniCopepods", "CarnCopepods"))
}

}
